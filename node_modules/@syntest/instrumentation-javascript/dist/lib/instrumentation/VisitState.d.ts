export declare class VisitState {
    varName: string;
    metaVarName: string;
    attrs: any;
    nextIgnore: any;
    cov: any;
    ignoreClassMethods: any;
    types: any;
    sourceMappingURL: any;
    reportLogic: any;
    constructor(types: any, sourceFilePath: any, inputSourceMap: any, ignoreClassMethods?: any[], reportLogic?: boolean);
    shouldIgnore(path: any): any;
    hintFor(node: any): any;
    maybeAssignSourceMapURL(node: any): void;
    counterNeedsHoisting(path: any): any;
    onEnter(path: any): void;
    onExit(path: any): void;
    setAttr(node: any, name: any, value: any): void;
    getAttr(node: any, name: any): any;
    increase(type: any, id: any, index: any): any;
    increaseTrue(type: any, id: any, index: any, node: any): any;
    insertCounter(path: any, increment: any): void;
    insertStatementCounter(path: any): void;
    insertFunctionCounter(path: any): void;
    getBranchIncrement(ifPath: any, branchName: any, loc: any): any;
    getBranchMetaTracker(branchName: string, testAsCode: string, variables: string[]): any;
    getBranchLogicIncrement(path: any, branchName: any, loc: any): any[];
    insertBranchCounter(ifPath: any, path: any, branchName: any, placeholder?: boolean): void;
    findLeaves(node: any, accumulator: any, parent: any, property: any): void;
}
//# sourceMappingURL=VisitState.d.ts.map