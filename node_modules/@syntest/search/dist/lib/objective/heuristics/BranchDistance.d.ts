export declare abstract class BranchDistance {
    /**
     *  Calculate the branch distance between: covering the branch needed to get a closer approach distance
     *  and the currently covered branch always between 0 and 1
     * @param node
     */
    abstract calculate(condition: string, variables: unknown, trueOrFalse: boolean): number;
    /**
     * Calculate the branch distance
     *
     * @param opcode the opcode (the comparison operator)
     * @param left the left values of the comparison (multiple execution traces)
     * @param right the right values of the comparison (multiple execution traces)
     * @param target the side of the branch you want to cover
     */
    branchDistanceNumeric(opcode: string, left: number[], right: number[], target: boolean): number;
    private normalize;
    private equalNumeric;
    private notEqualNumeric;
    private greater;
    private smallerEqual;
    private greaterEqual;
    private smaller;
}
//# sourceMappingURL=BranchDistance.d.ts.map