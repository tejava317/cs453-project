import { Encoding } from "../Encoding";
import { SearchSubject } from "../SearchSubject";
import { BranchObjectiveFunction } from "./BranchObjectiveFunction";
import { ApproachLevel } from "./heuristics/ApproachLevel";
import { BranchDistance } from "./heuristics/BranchDistance";
export declare abstract class ImplicitBranchObjectiveFunction<T extends Encoding> extends BranchObjectiveFunction<T> {
    protected constructor(approachLevel: ApproachLevel, branchDistance: BranchDistance, subject: SearchSubject<T>, id: string);
    abstract calculateDistance(encoding: T): number;
}
//# sourceMappingURL=ImplicitBranchObjectiveFunction.d.ts.map