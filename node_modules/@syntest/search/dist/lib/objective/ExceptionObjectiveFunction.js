"use strict";
/*
 * Copyright 2020-2021 Delft University of Technology and SynTest contributors
 *
 * This file is part of SynTest Framework - SynTest Core.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExceptionObjectiveFunction = void 0;
const ObjectiveFunction_1 = require("../objective/ObjectiveFunction");
const diagnostics_1 = require("../util/diagnostics");
/**
 * Objective function for the exception criterion.
 *
 * This objective function should not be added manually to the objective manager.
 * It is added dynamically when an exception occurs on runtime.
 *
 * @author Mitchell Olsthoorn
 */
class ExceptionObjectiveFunction extends ObjectiveFunction_1.ObjectiveFunction {
    constructor(subject, id, error) {
        super(id, subject);
        this._error = error;
    }
    get error() {
        return this._error;
    }
    /**
     * @inheritDoc
     */
    calculateDistance() {
        // This method should never be called.
        // The exception objective function is only created when an exception is already covered.
        // So the distance is always zero.
        throw new Error((0, diagnostics_1.shouldNeverHappen)("method not implemented."));
    }
}
exports.ExceptionObjectiveFunction = ExceptionObjectiveFunction;
//# sourceMappingURL=ExceptionObjectiveFunction.js.map