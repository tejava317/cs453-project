"use strict";
/*
 * Copyright 2020-2021 Delft University of Technology and SynTest contributors
 *
 * This file is part of SynTest Framework - SynTest Core.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignalTerminationTrigger = void 0;
/**
 * Termination trigger for interrupt signals.
 *
 * @author Mitchell Olsthoorn
 */
class SignalTerminationTrigger {
    constructor() {
        this._triggered = false;
        process.on("SIGINT", (signal) => this.handle(signal));
        process.on("SIGTERM", (signal) => this.handle(signal));
        process.on("SIGQUIT", (signal) => this.handle(signal));
    }
    /**
     * Handle the interrupt signal.
     *
     * @param signal the type of signal
     */
    handle(signal) {
        // TODO: use framework logger
        console.log(`Received ${signal}. Stopping search. Press Control-D to exit.`);
        this._triggered = true;
    }
    /**
     * @inheritDoc
     */
    isTriggered() {
        return this._triggered;
    }
}
exports.SignalTerminationTrigger = SignalTerminationTrigger;
//# sourceMappingURL=SignalTerminationTrigger.js.map