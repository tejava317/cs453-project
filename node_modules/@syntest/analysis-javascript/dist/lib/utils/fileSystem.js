"use strict";
/*
 * Copyright 2020-2023 Delft University of Technology and SynTest contributors
 *
 * This file is part of SynTest Framework - SynTest Javascript.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAllFiles = exports.readFile = void 0;
const node_fs_1 = require("node:fs");
const path = require("node:path");
function readFile(absolutePath) {
    if (!path.isAbsolute(absolutePath)) {
        absolutePath = path.resolve(absolutePath);
    }
    return (0, node_fs_1.readFileSync)(absolutePath).toString("utf8");
}
exports.readFile = readFile;
function getAllFiles(directory, extn, files, result, regex) {
    files = files || (0, node_fs_1.readdirSync)(directory);
    result = result || [];
    regex = regex || new RegExp(`\\${extn}$`);
    for (const file_ of files) {
        const file = path.join(directory, file_);
        if ((0, node_fs_1.statSync)(file).isDirectory()) {
            try {
                result = getAllFiles(file, extn, (0, node_fs_1.readdirSync)(file), result, regex);
            }
            catch {
                continue;
            }
        }
        else {
            if (regex.test(file)) {
                result.push(file);
            }
        }
    }
    return result;
}
exports.getAllFiles = getAllFiles;
//# sourceMappingURL=fileSystem.js.map