import { NodePath } from "@babel/core";
import * as t from "@babel/types";
import { AbstractSyntaxTreeVisitor } from "@syntest/ast-visitor-javascript";
import { Element } from "../element/Element";
export declare class ElementVisitor extends AbstractSyntaxTreeVisitor {
    private _elementMap;
    get elementMap(): Map<string, Element>;
    constructor(filePath: string, syntaxForgiving: boolean);
    private _createElement;
    Identifier: (path: NodePath<t.Identifier>) => void;
    Literal: (path: NodePath<t.Literal>) => void;
    TemplateElement: (path: NodePath<t.TemplateElement>) => void;
}
//# sourceMappingURL=ElementVisitor.d.ts.map