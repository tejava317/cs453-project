"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeExtractor = void 0;
/*
 * Copyright 2020-2023 Delft University of Technology and SynTest contributors
 *
 * This file is part of SynTest Framework - SynTest JavaScript.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const traverse_1 = require("@babel/traverse");
const Factory_1 = require("../../Factory");
const ElementVisitor_1 = require("./element/ElementVisitor");
const ObjectVisitor_1 = require("./object/ObjectVisitor");
const RelationVisitor_1 = require("./relation/RelationVisitor");
class TypeExtractor extends Factory_1.Factory {
    extractElements(filepath, ast) {
        const elementVisitor = new ElementVisitor_1.ElementVisitor(filepath, this.syntaxForgiving);
        (0, traverse_1.default)(ast, elementVisitor);
        return elementVisitor.elementMap;
    }
    extractRelations(filepath, ast) {
        const relationVisitor = new RelationVisitor_1.RelationVisitor(filepath, this.syntaxForgiving);
        (0, traverse_1.default)(ast, relationVisitor);
        return relationVisitor.relationMap;
    }
    extractObjectTypes(filepath, ast) {
        const objectVisitor = new ObjectVisitor_1.ObjectVisitor(filepath, this.syntaxForgiving);
        (0, traverse_1.default)(ast, objectVisitor);
        return objectVisitor.objectTypeMap;
    }
}
exports.TypeExtractor = TypeExtractor;
//# sourceMappingURL=TypeExtractor.js.map