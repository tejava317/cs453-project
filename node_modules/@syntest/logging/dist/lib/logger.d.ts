export declare function setupLogger(logDirectory: string, fileLogLevel: string[], consoleLogLevel: string): void;
export declare function getLogger(context: string): Logger;
/**
 * We don't want to expose the structure of the sublogger so we only export the type of the class.
 */
export type Logger = InstanceType<typeof SubLogger>;
/**
 * We use the winston logger singleton in each sublogger.
 * We do this to prevent memory leaks since each instance of a winston logger registers a bunch of event listeners.
 */
declare class SubLogger {
    private _context;
    constructor(context: string);
    error(message: string): void;
    warn(message: string): void;
    info(message: string): void;
    debug(message: string): void;
    silly(message: string): void;
}
export {};
//# sourceMappingURL=logger.d.ts.map