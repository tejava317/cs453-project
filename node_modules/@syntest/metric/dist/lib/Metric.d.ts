export type Metric = PropertyMetric | DistributionMetric | SeriesMetric | SeriesDistributionMetric | SeriesMeasurementMetric;
export interface PropertyMetric {
    type: MetricType.PROPERTY;
    name: MetricName;
}
export interface DistributionMetric {
    type: MetricType.DISTRIBUTION;
    name: MetricName;
}
export interface SeriesMetric {
    type: MetricType.SERIES;
    name: MetricName;
    seriesUnit: SeriesUnit;
}
export interface SeriesDistributionMetric {
    type: MetricType.SERIES_DISTRIBUTION;
    name: MetricName;
    seriesUnit: SeriesUnit;
}
export interface SeriesMeasurementMetric {
    type: MetricType.SERIES_MEASUREMENT;
    name: MetricName;
    seriesUnit: SeriesUnit;
}
export type PropertiesMap<T> = Map<MetricName, T>;
export type DistributionsMap = Map<MetricName, Distribution>;
export type SeriesMap<T> = Map<MetricName, Map<SeriesUnit, Series<T>>>;
export type MetricName = string;
export declare enum MetricType {
    PROPERTY = "property",
    DISTRIBUTION = "distribution",
    SERIES = "series",
    SERIES_DISTRIBUTION = "series-distribution",
    SERIES_MEASUREMENT = "series-measurement"
}
export type Distribution = number[];
export declare enum SeriesUnit {
    SEARCH_TIME = "search-time",
    TOTAL_TIME = "total-time",
    EVALUATION = "evaluation",
    ITERATION = "iteration"
}
export type Series<T> = Map<SeriesIndex, T>;
export type SeriesIndex = number;
//# sourceMappingURL=Metric.d.ts.map