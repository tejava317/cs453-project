import { ControlFlowGraph } from "./ControlFlowGraph";
import { Edge } from "./Edge";
import { Node } from "./Node";
/**
 * A contracted control flow graph.
 * This class contains the (original) full graph and a mapping between the nodes in the contracted graph and the nodes in the full graph.
 */
export declare class ContractedControlFlowGraph extends ControlFlowGraph {
    private readonly _fullGraph;
    private readonly _nodeMapping;
    private readonly _reverseNodeMapping;
    constructor(entry: Node, successExit: Node, errorExit: Node, nodes: Map<string, Node>, edges: Edge[], fullGraph: ControlFlowGraph, nodeMapping: Map<string, string[]>);
    get fullGraph(): ControlFlowGraph;
    get nodeMapping(): Map<string, string[]>;
    get reverseNodeMapping(): Map<string, string>;
    getParentNode(node: string): string;
    getChildNodes(node: string): string[];
}
//# sourceMappingURL=ContractedControlFlowGraph.d.ts.map