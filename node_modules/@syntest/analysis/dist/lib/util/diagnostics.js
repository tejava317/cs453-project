"use strict";
/*
 * Copyright 2023-2023 Delft University of Technology and SynTest contributors
 *
 * This file is part of SynTest Framework - SynTest Core.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.fileDoesNotHaveExtension = exports.fileDoesNotExist = exports.fileIsNotAFile = exports.pathNotInRootPath = exports.shouldNeverHappen = void 0;
/**
 * This file is meant to provide consistent error messages throughout the tool.
 */
const shouldNeverHappen = (bugLocation) => `This should never happen.\nThere is likely a bug in the ${bugLocation}.`;
exports.shouldNeverHappen = shouldNeverHappen;
const pathNotInRootPath = (rootPath, path) => `The given path is not in the given root path!\nRootpath: ${rootPath}\nPath: ${path}`;
exports.pathNotInRootPath = pathNotInRootPath;
const fileIsNotAFile = (filePath) => `The given path is not a file!\nPath: ${filePath}`;
exports.fileIsNotAFile = fileIsNotAFile;
const fileDoesNotExist = (filePath) => `The given file does not exist!\nPath: ${filePath}`;
exports.fileDoesNotExist = fileDoesNotExist;
const fileDoesNotHaveExtension = (filePath) => `The given file does not have an extension!\nPath: ${filePath}`;
exports.fileDoesNotHaveExtension = fileDoesNotHaveExtension;
//# sourceMappingURL=diagnostics.js.map