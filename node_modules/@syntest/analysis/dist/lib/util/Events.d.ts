import { ControlFlowProgram } from "@syntest/cfg";
import { RootContext } from "../RootContext";
import { Target } from "../Target";
export type Events = {
    sourceResolvingStart: <S>(rootContext: RootContext<S>, filePath: string) => void;
    sourceResolvingComplete: <S>(rootContext: RootContext<S>, filePath: string, source: string) => void;
    abstractSyntaxTreeResolvingStart: <S>(rootContext: RootContext<S>, filePath: string) => void;
    abstractSyntaxTreeResolvingComplete: <S>(rootContext: RootContext<S>, filePath: string, abstractSyntaxTree: S) => void;
    controlFlowGraphResolvingStart: <S>(rootContext: RootContext<S>, filePath: string) => void;
    controlFlowGraphResolvingComplete: <S>(rootContext: RootContext<S>, filePath: string, cfp: ControlFlowProgram) => void;
    targetExtractionStart: <S>(rootContext: RootContext<S>, filePath: string) => void;
    targetExtractionComplete: <S>(rootContext: RootContext<S>, filePath: string, target: Target) => void;
    dependencyResolvingStart: <S>(rootContext: RootContext<S>, filePath: string) => void;
    dependencyResolvingComplete: <S>(rootContext: RootContext<S>, filePath: string, dependencies: string[]) => void;
};
//# sourceMappingURL=Events.d.ts.map