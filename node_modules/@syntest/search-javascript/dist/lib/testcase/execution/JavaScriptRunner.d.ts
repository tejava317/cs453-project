/// <reference types="node" />
import { ChildProcess } from "node:child_process";
import { Logger } from "@syntest/logging";
import { EncodingRunner, ExecutionResult } from "@syntest/search";
import { StorageManager } from "@syntest/storage";
import { JavaScriptSubject } from "../../search/JavaScriptSubject";
import { JavaScriptDecoder } from "../../testbuilding/JavaScriptDecoder";
import { JavaScriptTestCase } from "../JavaScriptTestCase";
import { ExecutionInformationIntegrator } from "./ExecutionInformationIntegrator";
import { DoneMessage } from "./TestExecutor";
export declare class JavaScriptRunner implements EncodingRunner<JavaScriptTestCase> {
    protected static LOGGER: Logger;
    protected storageManager: StorageManager;
    protected decoder: JavaScriptDecoder;
    protected executionInformationIntegrator: ExecutionInformationIntegrator;
    protected tempTestDirectory: string;
    protected executionTimeout: number;
    protected testTimeout: number;
    protected silenceTestOutput: boolean;
    private _process;
    constructor(storageManager: StorageManager, decoder: JavaScriptDecoder, executionInformationIntergrator: ExecutionInformationIntegrator, temporaryTestDirectory: string, executionTimeout: number, testTimeout: number, silenceTestOutput: boolean);
    run(paths: string[], amount?: number): Promise<Omit<DoneMessage, "message">>;
    execute(subject: JavaScriptSubject, testCase: JavaScriptTestCase): Promise<ExecutionResult>;
    private _extractTraces;
    private _extractBranchTraces;
    get process(): ChildProcess;
}
//# sourceMappingURL=JavaScriptRunner.d.ts.map