"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CallGenerator = void 0;
const prng_1 = require("@syntest/prng");
const Generator_1 = require("../Generator");
class CallGenerator extends Generator_1.Generator {
    sampleArguments(depth, type_) {
        const arguments_ = [];
        for (const [index, parameterId] of type_.parameters.entries()) {
            const name = type_.parameterNames.get(index);
            arguments_[index] = this.sampler.sampleArgument(depth + 1, parameterId, name);
        }
        // if some params are missing, fill them with fake params
        const parameterIds = [...type_.parameters.values()];
        for (let index = 0; index < arguments_.length; index++) {
            if (!arguments_[index]) {
                arguments_[index] = this.sampler.sampleArgument(depth + 1, prng_1.prng.pickOne(parameterIds), String(index));
            }
        }
        for (let index = 0; index < 10; index++) {
            if (prng_1.prng.nextBoolean(0.05)) {
                // TODO make this a config parameter
                arguments_.push(this.sampler.sampleArgument(depth + 1, "anon", "anon"));
            }
        }
        return arguments_;
    }
}
exports.CallGenerator = CallGenerator;
//# sourceMappingURL=CallGenerator.js.map