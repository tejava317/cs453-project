import { ContextBuilder } from "../../../testbuilding/ContextBuilder";
import { JavaScriptTestCaseSampler } from "../../sampling/JavaScriptTestCaseSampler";
import { Decoding, Statement } from "../Statement";
import { ActionStatement } from "./ActionStatement";
import { ConstantObject } from "./ConstantObject";
/**
 * @author Dimitri Stallenberg
 */
export declare class ObjectFunctionCall extends ActionStatement {
    private _object;
    /**
     * Constructor
     * @param identifierDescription the return type options of the function
     * @param type the return type of the function
     * @param uniqueId id of the gene
     * @param methodName the name of the function
     * @param args the arguments of the function
     */
    constructor(variableIdentifier: string, typeIdentifier: string, name: string, uniqueId: string, arguments_: Statement[], object_: ConstantObject);
    mutate(sampler: JavaScriptTestCaseSampler, depth: number): ObjectFunctionCall;
    setChild(index: number, newChild: Statement): void;
    hasChildren(): boolean;
    getChildren(): Statement[];
    copy(): ObjectFunctionCall;
    decode(context: ContextBuilder): Decoding[];
}
//# sourceMappingURL=ObjectFunctionCall.d.ts.map