"use strict";
/*
 * Copyright 2020-2023 Delft University of Technology and SynTest contributors
 *
 * This file is part of SynTest Framework - SynTest Javascript.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionStatement = void 0;
const search_1 = require("@syntest/search");
const Statement_1 = require("../Statement");
/**
 * ActionStatement
 */
class ActionStatement extends Statement_1.Statement {
    constructor(variableIdentifier, typeIdentifier, name, ownType, uniqueId, arguments_, export_) {
        super(variableIdentifier, typeIdentifier, name, ownType, uniqueId);
        this._args = arguments_;
        this._export = export_;
    }
    setChild(index, newChild) {
        if (!newChild) {
            throw new Error("Invalid new child!");
        }
        if (index < 0 || index >= this.args.length) {
            throw new Error((0, search_1.shouldNeverHappen)(`Invalid index used index: ${index}`));
        }
        this.args[index] = newChild;
    }
    hasChildren() {
        return this._args.length > 0;
    }
    getChildren() {
        return [...this._args];
    }
    get args() {
        return this._args;
    }
    get export() {
        return this._export;
    }
}
exports.ActionStatement = ActionStatement;
//# sourceMappingURL=ActionStatement.js.map