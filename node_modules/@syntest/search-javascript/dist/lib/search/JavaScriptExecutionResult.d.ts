import { ExecutionResult, Trace } from "@syntest/search";
export declare enum JavaScriptExecutionStatus {
    PASSED = 0,
    FAILED = 1,
    TIMED_OUT = 2,
    MEMORY_OVERFLOW = 3,
    INFINITE_LOOP = 4
}
/**
 * JavaScript specific implementation of the execution results.
 *
 * @author Mitchell Olsthoorn
 */
export declare class JavaScriptExecutionResult implements ExecutionResult {
    /**
     * Execution status.
     * @protected
     */
    protected _status: JavaScriptExecutionStatus;
    /**
     * ARRAY of traces of the execution.
     * @protected
     */
    protected _traces: Trace[];
    /**
     * Duration of the execution.
     * @protected
     */
    protected _duration: number;
    /**
     * Error of execution.
     * @protected
     */
    protected _error: Error | undefined;
    /**
     * Constructor.
     *
     * @param status The status of the execution
     * @param traces The traces of the execution
     * @param duration The duration of the execution
     * @param exception The exception of the execution
     */
    constructor(status: JavaScriptExecutionStatus, traces: Trace[], duration: number, error?: Error | undefined);
    /**
     * @inheritDoc
     */
    coversId(id: string): boolean;
    /**
     * @deprecated
     */
    coversLine(line: number): boolean;
    /**
     * @inheritDoc
     */
    getDuration(): number;
    /**
     * @inheritDoc
     */
    getError(): Error;
    /**
     * @inheritDoc
     */
    getTraces(): Trace[];
    /**
     * @inheritDoc
     */
    hasError(): boolean;
    /**
     * @inheritDoc
     */
    hasPassed(): boolean;
    /**
     * @inheritDoc
     */
    hasTimedOut(): boolean;
}
//# sourceMappingURL=JavaScriptExecutionResult.d.ts.map