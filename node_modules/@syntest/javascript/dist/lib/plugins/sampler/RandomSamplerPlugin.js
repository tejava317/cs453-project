"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RandomSamplerPlugin = void 0;
/*
 * Copyright 2020-2023 Delft University of Technology and SynTest contributors
 *
 * This file is part of SynTest Framework - SynTest Core.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const base_language_1 = require("@syntest/base-language");
const search_javascript_1 = require("@syntest/search-javascript");
/**
 * Plugin for RandomSampler
 *
 * @author Dimitri Stallenberg
 */
class RandomSamplerPlugin extends base_language_1.SamplerPlugin {
    constructor() {
        super("javascript-random", "A JavaScript random sampler plugin");
    }
    createSamplerOperator(options) {
        return new search_javascript_1.JavaScriptRandomSampler(options.subject, undefined, // TODO incorrect constant pool should be part of sampler options
        this.args.constantPool, this.args.constantPoolProbability, this.args.typePool, this.args.typePoolProbability, this.args.statementPool, this.args.statementPoolProbability, this.args.typeInferenceMode, this.args.randomTypeProbability, this.args.incorporateExecutionInformation, this.args.maxActionStatements, this.args.stringAlphabet, this.args.stringMaxLength, this.args.deltaMutationProbability, this.args.exploreIllegalValues);
    }
    getOptions() {
        return new Map();
    }
}
exports.RandomSamplerPlugin = RandomSamplerPlugin;
//# sourceMappingURL=RandomSamplerPlugin.js.map