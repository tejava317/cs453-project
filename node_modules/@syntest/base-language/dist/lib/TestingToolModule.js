"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestingToolModule = void 0;
const module_1 = require("@syntest/module");
const SearchMetricListener_1 = require("./plugins/event-listeners/SearchMetricListener");
const SearchPerformanceListener_1 = require("./plugins/event-listeners/SearchPerformanceListener");
const SearchProgressBarListener_1 = require("./plugins/event-listeners/SearchProgressBarListener");
const SimpleObjectiveManagerPlugin_1 = require("./plugins/objective-managers/SimpleObjectiveManagerPlugin");
const StructuralObjectiveManagerPlugin_1 = require("./plugins/objective-managers/StructuralObjectiveManagerPlugin");
const StructuralUncoveredObjectiveManagerPlugin_1 = require("./plugins/objective-managers/StructuralUncoveredObjectiveManagerPlugin");
const TrackingObjectiveManagerPlugin_1 = require("./plugins/objective-managers/TrackingObjectiveManagerPlugin");
const UncoveredObjectiveManagerPlugin_1 = require("./plugins/objective-managers/UncoveredObjectiveManagerPlugin");
const DefaultProcreationPlugin_1 = require("./plugins/procreation-operators/DefaultProcreationPlugin");
const MOSAFamilyPlugin_1 = require("./plugins/search-algorithms/MOSAFamilyPlugin");
const NSGAIIPlugin_1 = require("./plugins/search-algorithms/NSGAIIPlugin");
const RandomSearchPlugin_1 = require("./plugins/search-algorithms/RandomSearchPlugin");
const LengthObjectiveComparatorPlugin_1 = require("./plugins/secondary-objectives/LengthObjectiveComparatorPlugin");
const SignalTerminationTriggerPlugin_1 = require("./plugins/termination-triggers/SignalTerminationTriggerPlugin");
const DynaMOSAPreset_1 = require("./presets/DynaMOSAPreset");
const MOSAPreset_1 = require("./presets/MOSAPreset");
const NSGAIIPreset_1 = require("./presets/NSGAIIPreset");
const RandomSearchPreset_1 = require("./presets/RandomSearchPreset");
class TestingToolModule extends module_1.Module {
    register(moduleManager, _metricManager, _storageManager, userInterface, _modules) {
        moduleManager.registerPlugin(this, new SearchMetricListener_1.SearchMetricListener());
        moduleManager.registerPlugin(this, new SearchPerformanceListener_1.SearchPerformanceListener());
        moduleManager.registerPlugin(this, new SearchProgressBarListener_1.SearchProgressBarListener(userInterface));
        moduleManager.registerPlugin(this, new SimpleObjectiveManagerPlugin_1.SimpleObjectiveManagerPlugin());
        moduleManager.registerPlugin(this, new StructuralObjectiveManagerPlugin_1.StructuralObjectiveManagerPlugin());
        moduleManager.registerPlugin(this, new StructuralUncoveredObjectiveManagerPlugin_1.StructuralUncoveredObjectiveManagerPlugin());
        moduleManager.registerPlugin(this, new TrackingObjectiveManagerPlugin_1.TrackingObjectiveManagerPlugin());
        moduleManager.registerPlugin(this, new UncoveredObjectiveManagerPlugin_1.UncoveredObjectiveManagerPlugin());
        moduleManager.registerPlugin(this, new LengthObjectiveComparatorPlugin_1.LengthObjectiveComparatorPlugin());
        moduleManager.registerPlugin(this, new DefaultProcreationPlugin_1.DefaultProcreationPlugin());
        moduleManager.registerPlugin(this, new MOSAFamilyPlugin_1.MOSAFamilyPlugin());
        moduleManager.registerPlugin(this, new NSGAIIPlugin_1.NSGAIIPlugin());
        moduleManager.registerPlugin(this, new RandomSearchPlugin_1.RandomSearchPlugin());
        moduleManager.registerPlugin(this, new SignalTerminationTriggerPlugin_1.SignalTerminationTriggerPlugin());
        moduleManager.registerPreset(this, new DynaMOSAPreset_1.DynaMOSAPreset());
        moduleManager.registerPreset(this, new MOSAPreset_1.MOSAPreset());
        moduleManager.registerPreset(this, new NSGAIIPreset_1.NSGAIIPreset());
        moduleManager.registerPreset(this, new RandomSearchPreset_1.RandomSearchPreset());
    }
}
exports.TestingToolModule = TestingToolModule;
//# sourceMappingURL=TestingToolModule.js.map