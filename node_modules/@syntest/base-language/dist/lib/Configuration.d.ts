import { LoggingOptions } from "@syntest/logging";
import { GeneralOptions } from "@syntest/module";
import { RandomOptions } from "@syntest/prng";
import { StorageOptions as ModuleStorageOptions } from "@syntest/storage";
import Yargs = require("yargs");
export declare enum OptionGroups {
    Storage = "Storage Options:",
    Target = "Target Options:",
    SearchAlgorithm = "Search Algorithm Options:",
    Budget = "Budget Options:",
    PostProccessing = "Post Proccessing Options:",
    Sampling = "Sampling Options:",
    ResearchMode = "Research Mode Options:"
}
export type TargetOptions = {
    targetRootDirectory: string;
    targetInclude: string[];
    targetExclude: string[];
    analysisInclude: string[];
    analysisExclude: string[];
};
export type StorageOptions = {
    statisticsDirectory: string;
    testDirectory: string;
    instrumentedDirectory: string;
};
export type AlgorithmOptions = {
    searchAlgorithm: string;
    populationSize: number;
    objectiveManager: string;
    secondaryObjectives: string[];
    procreation: string;
    crossover: string;
    sampler: string;
    terminationTriggers: string[];
};
export type BudgetOptions = {
    totalTime: number;
    searchTime: number;
    iterations: number;
    evaluations: number;
};
export type PostProcessingOptions = {
    testMinimization: boolean;
};
export type SamplingOptions = {
    maxDepth: number;
    maxActionStatements: number;
    exploreIllegalValues: boolean;
    deltaMutationProbability: number;
    multiPointCrossoverProbability: number;
    crossoverProbability: number;
    stringAlphabet: string;
    stringMaxLength: number;
    numericMaxValue: number;
};
export type ResearchModeOptions = {
    configuration: string;
    outputProperties: string[];
};
export type ArgumentsObject = GeneralOptions & TargetOptions & StorageOptions & ModuleStorageOptions & AlgorithmOptions & BudgetOptions & LoggingOptions & PostProcessingOptions & SamplingOptions & ResearchModeOptions & RandomOptions;
export declare class Configuration {
    getOptions(): {
        [key: string]: Yargs.Options;
    };
    getTargetOptions(): {
        [key: string]: Yargs.Options;
    };
    getStorageOptions(): {
        [key: string]: Yargs.Options;
    };
    getAlgorithmOptions(): {
        [key: string]: Yargs.Options;
    };
    getBudgetOptions(): {
        [key: string]: Yargs.Options;
    };
    getPostProcessingOptions(): {
        [key: string]: Yargs.Options;
    };
    getSamplingOptions(): {
        [key: string]: Yargs.Options;
    };
    getResearchModeOptions(): {
        [key: string]: Yargs.Options;
    };
}
//# sourceMappingURL=Configuration.d.ts.map