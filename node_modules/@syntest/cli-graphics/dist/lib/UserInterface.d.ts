import * as cliProgress from "cli-progress";
export declare class UserInterface {
    protected barObject: cliProgress.MultiBar | undefined;
    protected bars: Map<string, cliProgress.Bar> | undefined;
    protected print(text: string): void;
    protected indent(text: string, amount: number): string;
    printTitle(text: string): void;
    printHeader(text: string): void;
    printError(text: string): void;
    printWarning(text: string): void;
    printSuccess(text: string): void;
    printBold(text: string): void;
    printTable(title: string, tableObject: TableObject): void;
    printItemization(title: string, items: ItemizationItem[]): void;
    startProgressBars(bars: BarObject[]): void;
    updateProgressBar(bar: BarObject): void;
    updateProgressBars(bars: BarObject[]): void;
    stopProgressBars(): void;
    protected barFormatter(options: cliProgress.Options, parameters: cliProgress.Params, payload: Payload): string;
    protected table(title: string, tableObject: TableObject): string;
    protected itemization(items: ItemizationItem[], indentation?: number): string;
    protected title(text: string): string;
    protected header(text: string): string;
    protected error(text: string): string;
    protected warning(text: string): string;
    protected success(text: string): string;
    protected bold(text: string): string;
}
export type ItemizationItem = {
    text: string;
    subItems?: ItemizationItem[];
};
export type TableObject = {
    headers: string[];
    rows: string[][];
    footers: string[];
};
export type BarObject = {
    name: string;
    value: number;
    maxValue: number;
    meta: string;
};
type Payload = {
    name: string;
    meta: string;
};
export {};
//# sourceMappingURL=UserInterface.d.ts.map